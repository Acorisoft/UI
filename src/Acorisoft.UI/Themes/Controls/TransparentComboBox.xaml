<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Acorisoft.UI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Acorisoft.UI;component/Themes/Colors/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!-- 焦点样式 -->
    <!--  -->
    <!--  -->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" 
                               StrokeDashArray="1 2" 
                               SnapsToDevicePixels="true"
                               StrokeThickness="1" 
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 文本编辑框样式 -->
    <!--  -->
    <!--  -->
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost" 
                                  Background="Transparency" 
                                  Focusable="false" 
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 状态切换按钮样式 -->
    <!--  -->
    <!--  -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            SnapsToDevicePixels="true"
                            Background="{StaticResource UI.Brushes.Transparenct}">
                        <Border x:Name="splitBorder"
                                HorizontalAlignment="Right" 
                                Margin="0" 
                                SnapsToDevicePixels="true">
                            <Path x:Name="arrow" 
                                  Data="F1 M1024,1024z M0,0z M512,595.858286L718.482286,389.339429A18.285714,18.285714,0,0,1,744.374857,415.232L524.946286,634.660571A18.285714,18.285714,0,0,1,499.053714,634.660571L279.625143,415.232A18.285714,18.285714,0,0,1,305.517714,389.339429L512,595.858286z" 
                                  Fill="{TemplateBinding Foreground}" 
                                  HorizontalAlignment="Center"
                                  Stretch="Uniform"
                                  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type c:TransparentComboBox}},Path=IconSize,Mode=OneWay}"
                                  Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type c:TransparentComboBox}},Path=IconSize,Mode=OneWay}"
                                  Margin="0" 
                                  VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 样式 -->
    <!--  -->
    <!--  -->
    <Style TargetType="{x:Type c:TransparentComboBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource UI.Brushes.Transparenct}"/>
        <Setter Property="Foreground" Value="{StaticResource UI.Brushes.Black}"/>
        <Setter Property="IconSize" Value="29" />
        <Setter Property="PanelForeground" Value="{StaticResource UI.Brushes.White}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="ItemsPadding" Value="16" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="false">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:TransparentComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="29" Width="29"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup"
                                       AllowsTransparency="true"
                                       Grid.ColumnSpan="2"
                                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                       Margin="1"
                                       Placement="Bottom"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                                    <Border x:Name="dropDownBorder" 
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                            BorderThickness="1"
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid" 
                                                  RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas"
                                                        HorizontalAlignment="Left"
                                                        Height="0" 
                                                        VerticalAlignment="Top"
                                                        Width="0">
                                                    <Rectangle x:Name="opaqueRect"
                                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                Margin="{TemplateBinding ItemsPadding}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" 
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding PanelForeground}"
                                              Grid.ColumnSpan="2"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Style="{StaticResource ComboBoxToggleButton}"/>
                                <ContentPresenter x:Name="contentPresenter" 
                                                  TextElement.Foreground="{TemplateBinding PanelForeground}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                                  Content="{TemplateBinding SelectionBoxItem}" 
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  IsHitTestVisible="false" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="templateRoot">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value=".5"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="templateRoot">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value=".5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type c:TransparentComboBox}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="29" Width="29"/>
                                </Grid.ColumnDefinitions>
                                <Popup x:Name="PART_Popup" 
                                       AllowsTransparency="true" 
                                       Grid.ColumnSpan="2" 
                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       Placement="Bottom" 
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

                                    <Border x:Name="dropDownBorder"
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid x:Name="grid"
                                                  RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas x:Name="canvas" 
                                                        HorizontalAlignment="Left"
                                                        Height="0" 
                                                        VerticalAlignment="Top"
                                                        Width="0">
                                                    <Rectangle x:Name="opaqueRect"
                                                               Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" 
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                Margin="{TemplateBinding ItemsPadding}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton x:Name="toggleButton" 
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding PanelForeground}"
                                              Grid.ColumnSpan="2"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              Style="{StaticResource ComboBoxToggleButton}"/>
                                <Border x:Name="border" 
                                        Background="{StaticResource UI.Brushes.Transparenct}"
                                        Margin="{TemplateBinding BorderThickness}">
                                    <TextBox x:Name="PART_EditableTextBox"
                                             CaretBrush="{TemplateBinding PanelForeground}"
                                             Foreground="{TemplateBinding PanelForeground}"
                                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" 
                                             Margin="{TemplateBinding Padding}" 
                                             Style="{StaticResource ComboBoxEditableTextBox}"
                                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsFocused" Value="False" SourceName="PART_EditableTextBox"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="templateRoot">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value=".5"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="templateRoot">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value=".5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" SourceName="toggleButton"/>
                                        <Condition Property="IsFocused" Value="True" SourceName="PART_EditableTextBox"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="toggleButton">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value=".5"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="toggleButton">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0" Value=".5"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.400" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>